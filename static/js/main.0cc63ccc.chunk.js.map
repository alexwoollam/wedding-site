{"version":3,"sources":["Components/Text/Heading.tsx","Components/Media/HeaderImage.tsx","Components/Text/TextBlock.tsx","Controllers/Forms/GoogleSheets.tsx","Components/Help/Info.tsx","Components/Forms/Thanks.tsx","Components/Forms/KeepMeUpdated.tsx","Images/wedding-top.png","Pages/Holder.tsx","Components/Music/Track.tsx","Components/Music/SelectedTracks.tsx","Components/Music/SearchTrack.tsx","Pages/Music.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Heading","props","text","className","data-testid","HeaderImage","src","Row","Col","Media","center","object","data-src","alt","TextBlock","GoogleSheets","data","SPREADSHEET_ID","SHEET_ID","CLIENTEMAIL","process","REACT_APP_G_USR","CLIENTKEY","REACT_APP_G_KEY","doc","GoogleSpreadsheet","Name","length","Email","appendSpreadsheet","row","a","useServiceAccountAuth","client_email","private_key","replace","loadInfo","sheet","sheetsById","addRow","console","error","Info","data-tip","data-for","id","place","effect","tooltip","Thanks","thanks","name","Submit","email","Button","type","aria-expanded","KeepMeUpdated","REACT_APP_SPREADSHEET_ID","REACT_APP_SHEET_ID","RECAPTCHAKEY","REACT_APP_RECAPTCHAKEY","React","useState","form","user","setUser","user_data","username","md","Form","onSubmit","event","preventDefault","Input","placeholder","onChange","target","value","sitekey","size","headingImage","Image","Holder","Container","Track","items","Object","values","map","track","index","sm","Card","CardImg","album","images","url","onClick","addTrack","artists","CardBody","CardTitle","tag","CardSubtitle","preview_url","controls","SelectedTracks","style","border","trackimage","trackname","trackartist","removeTrack","SearchTracks","state","theToken","spotifyCreds","trackList","theTracks","tracks","searchForTrack","bind","submitTracks","title","artist","image","the_length","this","trackid","joined","concat","setState","list","filter","CLIENT_ID","REACT_APP_SPOTIFYCLI","CLIENT_SEC","REACT_APP_SPOTIFYSEC","token","btoa","fetch","body","headers","method","then","response","json","access_token","trackArray","push","search","spotifyApi","SpotifyWebApi","setAccessToken","searchTracks","isSelected","Component","Music","SearchTrack","App","directions","music","rsvp","REACT_APP_DEV_MODE","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0cc63ccc.chunk.js","sourcesContent":["import React from 'react';\n\ninterface TextSent {\n    text: string;\n}\n\nfunction Heading( props:TextSent ) {\n  if( ! props.text ){\n    return null;\n  }\n  return (\n    <h1 \n      className=\"text-grey-700 font-serif text-3xl text-center m-2\"\n      data-testid=\"text-block\"\n    >\n        { props.text }\n    </h1>\n  );\n}\n\nexport default Heading;","import React from 'react';\nimport {Row, Col, Media} from 'reactstrap';\n\ninterface ImageSent {\n    src: string,\n    alt: string\n}\n\nfunction HeaderImage( props:ImageSent ) {\n  if( ! props.src ){\n    return null;\n  }\n\n  return (\n    <Row \n        className=\"Header flex justify-center\"\n        data-testid=\"header-image-block\"\n    >\n      <Col\n        className=\"col-sm-12 col-md-6 m-auto\"\n      >\n      <Media center=\"true\">\n        <Media \n          object\n          data-src={props.src}\n          alt={props.alt}\n        />\n      </Media>\n      </Col>\n    </Row>\n  );\n}\n\nexport default HeaderImage;","import React from 'react';\n\ninterface TextSent {\n    text: string;\n}\n\nfunction TextBlock( props:TextSent ) {\n  if( ! props.text ){\n    return null;\n  }\n  return (\n    <p \n    className=\"text-block text-gray-600 font-sans text-base text-center\" \n    data-testid=\"text-block\"\n    >\n        { props.text }\n    </p>\n  );\n}\n\nexport default TextBlock;","// eslint-disable-next-line\r\nimport React from 'react';\r\nimport { GoogleSpreadsheet } from 'google-spreadsheet';\r\n\r\n/***\r\n * TODO:\r\n * Currently returning a boolean, \r\n * should really return an object of infomation.\r\n */\r\n\r\nfunction GoogleSheets( data:any, SPREADSHEET_ID:string, SHEET_ID:string ): boolean {\r\n\r\n    const CLIENTEMAIL:string = process.env.REACT_APP_G_USR!;\r\n    const CLIENTKEY:string = process.env.REACT_APP_G_KEY!;\r\n    \r\n    const doc = new GoogleSpreadsheet( SPREADSHEET_ID );\r\n\r\n    if( data.Name.length <= 0 || data.Email.length <= 0 ){\r\n      return false;\r\n    }\r\n\r\n    /* istanbul ignore next */\r\n    const appendSpreadsheet = async (row:any) => {\r\n        try {\r\n          await doc.useServiceAccountAuth({\r\n            client_email: CLIENTEMAIL,\r\n            private_key: CLIENTKEY.replace(/\\\\n/g, '\\n'),\r\n          });\r\n          \r\n          await doc.loadInfo();\r\n          const sheet = doc.sheetsById[ SHEET_ID ];\r\n          await sheet.addRow(data);\r\n          return true;\r\n        } catch (e) {\r\n          console.error('Error: ', e);\r\n          return false;\r\n        }\r\n\r\n    };\r\n    \r\n    if( CLIENTEMAIL !== 'null' && CLIENTKEY !== 'null' && appendSpreadsheet(data) ){\r\n        return true;    \r\n    }\r\n    return false;\r\n}\r\n\r\nexport default GoogleSheets;","import React from 'react';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\ninterface TextSent {\r\n    tooltip: string,\r\n    text: string,\r\n}\r\n\r\nfunction Info( props:TextSent ) {\r\n  \r\n  if( ! props.text ){\r\n    return null;\r\n  }\r\n  return (\r\n    <>\r\n        <label data-tip data-for='registerTip' data-testid=\"info\" className=\"font-mono my-6\"\r\n        >\r\n            { props.text }\r\n        </label>\r\n        <ReactTooltip id=\"registerTip\" place=\"top\" effect=\"solid\">\r\n        { props.tooltip }\r\n        </ReactTooltip>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Info;","import React from 'react';\nimport Heading from '../Text/Heading';\n\nfunction Thanks( props:any ) {\n    \n    const text = ({\n        thanks: \"Thanks, \" + props.name + \"!!\",\n    });\n    \n    return (\n        <div>\n            <Heading text={text.thanks} />\n        </div>\n    );\n    \n}\n\nexport default Thanks;","import React from 'react';\nimport GoogleSheets from '../../Controllers/Forms/GoogleSheets';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport Info from '../Help/Info';\nimport { Button, Form, Input, Col } from 'reactstrap';\nimport Thanks from './Thanks';\n\nexport function Submit( props:any ) {\n    if( props.name && props.email ){\n        return (\n            <Button \n                type=\"submit\" \n                className=\"my-3 transform bg-indigo-600 hover:bg-indigo-300 rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\" \n                aria-expanded=\"false\"\n                data-testid=\"submit-button\"\n                >\n                Submit\n            </Button>\n        )\n    }\n    return null;\n}\n\nconst text = {\n    text: 'Keep me updated',\n    tooltip: 'We will use this information to keep you updated when important information has been added to this site!'\n}\n\ninterface KeepMeUpdatedInterface {\n    name: string,\n    email: string,\n    form: boolean,\n}\n\nfunction KeepMeUpdated() {\n\n    const SPREADSHEET_ID:string = process.env.REACT_APP_SPREADSHEET_ID!;\n    const SHEET_ID:string = process.env.REACT_APP_SHEET_ID!;\n    const RECAPTCHAKEY:string = process.env.REACT_APP_RECAPTCHAKEY!;\n    \n    const [user, setUser] = React.useState<KeepMeUpdatedInterface>({\n        name: '',\n        email: '',\n        form: false,\n    });\n\n    const user_data = {\n        Name: user.name,\n        Email: user.email,\n\n    };\n      \n    const handlePostForm = ( event:any ) => {\n        /* istanbul ignore next */\n        event.preventDefault();\n\n        /* istanbul ignore next */\n        if( GoogleSheets(user_data, SPREADSHEET_ID, SHEET_ID ) ){\n            setUser({...user, form: true});\n        };\n    }\n\n    const setTheEmail = ( event:any ) => {\n        /* istanbul ignore next */\n        setUser({...user, email: event.target.value});\n    }\n\n    const setTheName = ( event:any ) => {\n        /* istanbul ignore next */\n        setUser({...user, name: event.target.value});\n    }\n\n    /* istanbul ignore else */\n    if( ! user.form ){\n        return (\n            <Col md={6}\n                className=\"m-auto mt-3\"\n            >\n                <Form onSubmit={ handlePostForm } className=\"m-auto max-w-md my-10\">\n                \n                <Info text={ text.text } tooltip={ text.tooltip }/>\n    \n                <Input \n                id='name'\n                type=\"text\" \n                className=\"mb-3 p-3 block w-full rounded-md bg-gray-100 border-transparent focus:border-gray-500 focus:bg-white focus:ring-0\"\n                placeholder=\"Arya Stark\"\n                onChange={ setTheName }\n                ></Input>\n    \n                <Input\n                id='email'\n                type=\"email\" \n                className=\"p-3 block w-full rounded-md bg-gray-100 border-transparent focus:border-gray-500 focus:bg-white focus:ring-0\"\n                placeholder=\"arya_stark@winterfell.gov\"\n                onChange={ setTheEmail }\n                ></Input>\n\n                <ReCAPTCHA\n                    sitekey={ RECAPTCHAKEY }\n                    size=\"invisible\"\n                />\n    \n                <Submit name={user.name} email={user.email} />\n\n            </Form>\n            </Col>\n        );\n    } else {\n        let username : string = user.name;\n        return (\n            <>\n                <Thanks name={username} />\n            </>\n        )\n    }   \n}\n\nexport default KeepMeUpdated;","export default __webpack_public_path__ + \"static/media/wedding-top.d36994dd.png\";","import React from 'react';\r\nimport Heading from '../Components/Text/Heading';\r\nimport HeaderImage from '../Components/Media/HeaderImage';\r\nimport TextBlock from '../Components/Text/TextBlock';\r\nimport KeepMeUpdated from '../Components/Forms/KeepMeUpdated';\r\nimport Image from '../Images/wedding-top.png';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\n\r\nconst text = ({\r\n  intro: \"Alex & Lydia are Getting Married!\",\r\n  subtitle: \"MORE INFORMATION COMING SOON...\"\r\n});\r\n\r\nconst headingImage = ({\r\n  src: Image,\r\n  alt: \"Illustration of a boquet of flowers\"\r\n});\r\n\r\nfunction Holder() {\r\n\r\n  return (\r\n    <Container>\r\n      <HeaderImage src={ headingImage.src } alt={ headingImage.alt }/>\r\n      <Row className=\"Intro\">\r\n        <Col md={12}\r\n          className=\"m-auto\"\r\n        >\r\n          <Heading text={text.intro}/>\r\n          <TextBlock text={text.subtitle}/>\r\n          <KeepMeUpdated/>\r\n        </Col>\r\n      </Row>\r\n      \r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Holder;\r\n","import React from 'react';\nimport ReactAudioPlayer from 'react-audio-player';\nimport {Container, Card, Row, Col, CardImg, CardBody, CardTitle, CardSubtitle, Button} from 'reactstrap';\n\ninterface PropsDefined {\n    data: object,\n    playTrack?: any,\n    addTrack?: any,\n    isSelected?: boolean,\n}\n\nfunction Track( props: PropsDefined ){\n\n    if( ! props.data ){ \n        return null;\n    }\n\n    let items = Object.values(props.data);\n    \n    if( items[1] ){        \n        return (\n            <Container className=\"container mx-auto\">\n                <Row>\n                    {items[1].map( (track, index)=>(\n                        <Col key={index} sm={12} md={4}>\n                            <Card className=\"box-border m-3 p-2 border-4 rounded\">\n                                <CardImg src={ track.album.images[1].url } alt={\"artwork for \" + track.name } />\n                                <Button data-testid='add-track' onClick={ () => props.addTrack( track.id, track.name, track.artists[0].name, track.album.images[2].url ) } >Add track</Button>\n                                <CardBody>\n                                    \n                                            <CardTitle tag=\"h4\">{ track.name }</CardTitle>\n                                            <CardSubtitle tag=\"h5\">{ track.artists[0].name }</CardSubtitle>\n                                            <br/>\n                                            {\n                                            track.preview_url ? \n                                            (\n                                                <div data-testid=\"preview-button\">\n                                                    <ReactAudioPlayer\n                                                    className={'w-100'}\n                                                    src={track.preview_url}\n                                                    controls\n                                                    />\n                                                </div>\n                                            ):\n                                            null\n                                            }\n                                    \n                                </CardBody>\n                            </Card>\n                        </Col>\n                    ))}\n                </Row>\n            </Container>\n        );\n    } else {\n        return null;\n    }\n    \n} \n\nexport default Track;","import React from 'react';\nimport {Container, Row, Col, Button} from 'reactstrap';\n\ninterface PropsDefined {\n    data: any,\n    addTrack?: any,\n    removeTrack?: any,\n    isSelected?: boolean,\n}\n\nfunction SelectedTracks( props: PropsDefined ){\n\n    if( ! props.data ){ \n        return null;\n    }\n\n    let items = props.data;\n\n    if( items.length > 0 ){\n        return (\n            <Container className={ 'mb-3' }>\n                {items.map( (track, index)=>(\n                    <Row key={ index } style={{border: '2px dashed lightgrey'}} className='p-3 mt-2 rounded'>\n                        <Col md={1}>\n                            <img className={'rounded'} src={ track?.trackimage } alt={\"artwork for \" + track.trackname } />\n                        </Col>\n                        <Col>\n                            <h4>{ track.trackname }</h4>\n                            <h5>{ track.trackartist }</h5>\n                        </Col>\n                        <Col md={1} className=\"d-flex justify-content-center\">\n                            <Button data-testid='remove-button' className={'btn-danger'} onClick={ () => props.removeTrack(track.id) }>Remove</Button>\n                        </Col>\n                    </Row>\n                ))}\n            </Container>\n        );\n    } else {\n        return null;\n    }\n} \n\nexport default SelectedTracks;","// @ts-nocheck\nimport React, { Component } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Track from './Track';\nimport SelectedTracks from './SelectedTracks';\nimport { Col, Form, Input, Button } from 'reactstrap';\n\nclass SearchTracks extends Component{\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            theToken: [],\n            spotifyCreds: true,\n            trackList: [],\n            theTracks: {\n                tracks: []\n            },\n        };\n\n        this.searchForTrack = this.searchForTrack.bind(this);\n        this.addTrack = this.addTrack.bind(this);\n        this.removeTrack = this.removeTrack.bind(this);\n        this.submitTracks = this.submitTracks.bind(this);\n    }\n\n    addTrack( id: string, title: string, artist: string, image: string ){\n        var the_length = 0;\n        if(this.state.trackList){\n            the_length = this.state.trackList.length; \n        }\n\n        const object = {\n            id: the_length, \n            trackid: id,\n            trackname: title,\n            trackartist: artist,\n            trackimage: image,\n        }\n        var joined = this.state.trackList.concat(object);\n        this.setState({ trackList: joined });\n    }\n\n    removeTrack( id: number ){\n        const list = this.state.trackList.filter(trackList => trackList.id !== id);\n        this.setState({ trackList: list });\n    }\n\n    componentDidMount(){\n        const CLIENT_ID:string = process.env.REACT_APP_SPOTIFYCLI!;\n        const CLIENT_SEC:string = process.env.REACT_APP_SPOTIFYSEC!;\n\n        var token = btoa( CLIENT_ID + ':' + CLIENT_SEC );\n\n        fetch(\"https://accounts.spotify.com/api/token\", {\n        body: \"grant_type=client_credentials\",\n        headers: {\n            'Authorization': 'Basic ' + token,\n            'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n        },\n        method: \"POST\"\n        })\n        .then(response => response.json())\n        .then( data => \n            this.setState({\n                theToken: data.access_token\n            })\n        );\n    };\n\n    submitTracks() {\n        \n        var trackArray = [];\n        this.state.trackList.map((track: any) => (\n            trackArray.push('spotify:track:'+track.trackid)\n        ));\n        return trackArray;\n        /**\n         * yeeah, we're going to have to dump these to a google sheet or something.\n         */\n\n    }\n\n    searchForTrack( search:any ){\n        var spotifyApi = new SpotifyWebApi();\n        spotifyApi.setAccessToken(this.state.theToken);\n        spotifyApi.searchTracks(search.target.value).then(\n            (data) => {        \n                this.setState({\n                    theTracks: data,\n                })\n            },\n        );\n    }\n\n    render() {\n        return (\n            <Col\n                className='m-auto'\n            >\n                <Button data-testid='submit-button' onClick={ this.submitTracks }>Lets rock!</Button>\n                <SelectedTracks data={ this.state.trackList } removeTrack={ this.removeTrack } isSelected={true} />\n                <Form className=\"m-auto max-w-md my-10\">\n                    <Input \n                    type=\"text\"\n                    id=\"search-track\"\n                    data-testid='search-input'\n                    className=\"p-3 block w-full rounded-md bg-gray-100 border-transparent focus:border-gray-500 focus:bg-white focus:ring-0\"\n                    placeholder=\"Song title\"\n                    onChange={ this.searchForTrack }\n                    ></Input>\n                </Form>\n                <Track data={ this.state.theTracks.tracks } addTrack={ this.addTrack } />\n            </Col>\n        );\n    };   \n}\n\nexport default SearchTracks;","import React from 'react';\r\nimport Heading from '../Components/Text/Heading';\r\nimport SearchTrack from '../Components/Music/SearchTrack';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\nconst text = ({\r\n  intro: \"What music would you dance too?\",\r\n});\r\n\r\nfunction Music() {\r\n\r\n  return (\r\n    <Row className=\"App container mx-auto\">\r\n      <Col className=\"Intro\">\r\n        <Heading text={text.intro}/>\r\n        <SearchTrack/>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default Music;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport Holder from './Pages/Holder';\nimport Music from './Pages/Music';\n\n\nfunction App() {\n\n  const devmode = process.env.REACT_APP_DEV_MODE;\n\n  let directions: any = null;\n  let music: any = null;\n  let rsvp: any = null;\n\n  /**\n   * CI/CD: remove item from devmode to push to live site.\n   */\n  if ( devmode === 'true' ) {\n    directions = <Route path=\"/directions\"><h1>directions</h1></Route>;\n    music = <Route path=\"/music\"><Music/></Route>;\n    rsvp = <Route path=\"/rsvp\"><h1>rsvp</h1></Route>;\n  }\n\n  return (\n    <Router>\n      <Switch>\n        {directions}      \n        {music}\n        {rsvp}\n        <Route path=\"/\" component={Holder} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}