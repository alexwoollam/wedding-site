{"version":3,"sources":["Components/Text/Heading.tsx","Components/Media/HeaderImage.tsx","Components/Text/TextBlock.tsx","Controllers/Forms/GoogleSheets.tsx","Components/Help/Info.tsx","Components/Forms/Thanks.tsx","Components/Forms/KeepMeUpdated.tsx","Images/wedding-top.png","Pages/Holder.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Heading","props","text","className","data-testid","TextBlock","src","alt","style","maxWidth","GoogleSheets","data","SPREADSHEET_ID","SHEET_ID","doc","GoogleSpreadsheet","Name","length","Email","row","a","useServiceAccountAuth","client_email","process","private_key","replace","loadInfo","sheet","sheetsById","addRow","console","error","appendSpreadsheet","Info","data-tip","data-for","id","place","effect","tooltip","Thanks","thanks","name","Submit","email","type","aria-expanded","outPutRecaptcha","value","log","KeepMeUpdated","useState","form","user","setUser","user_data","username","onSubmit","event","preventDefault","placeholder","onChange","target","set_email","sitekey","size","headingImage","Image","Holder","HeaderImage","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36d48268.chunk.js","sourcesContent":["import React from 'react';\n\ninterface TextSent {\n    text: string;\n}\n\nfunction Heading( props:TextSent ) {\n  if( ! props.text ){\n    return null;\n  }\n  return (\n    <h1 \n      className=\"text-grey-700 font-serif text-3xl text-center m-5\"\n      data-testid=\"text-block\"\n    >\n        { props.text }\n    </h1>\n  );\n}\n\nexport default Heading;","import React from 'react';\n\ninterface ImageSent {\n    src: string,\n    alt: string\n}\n\nfunction TextBlock( props:ImageSent ) {\n  if( ! props.src ){\n    return null;\n  }\n\n  return (\n    <div \n        className=\"Header flex justify-center\"\n        data-testid=\"header-image-block\"\n    >\n        <img \n          className=\"object-scale-down object-center w-150 h-50 m-5\"\n          src={props.src}\n          alt={props.alt}\n          style={{\n            maxWidth: \"350px\"\n          }}\n        />\n    </div>\n  );\n}\n\nexport default TextBlock;","import React from 'react';\n\ninterface TextSent {\n    text: string;\n}\n\nfunction TextBlock( props:TextSent ) {\n  if( ! props.text ){\n    return null;\n  }\n  return (\n    <p \n    className=\"text-block text-gray-600 font-sans text-base text-center\" \n    data-testid=\"text-block\"\n    >\n        { props.text }\n    </p>\n  );\n}\n\nexport default TextBlock;","// eslint-disable-next-line\r\nimport React from 'react';\r\nimport { GoogleSpreadsheet } from 'google-spreadsheet';\r\n\r\n/***\r\n * TODO:\r\n * Currently returning a boolean, \r\n * should really return an object of infomation.\r\n */\r\n\r\nfunction GoogleSheets( data:any, SPREADSHEET_ID:string, SHEET_ID:string ): boolean {\r\n\r\n    const CLIENTEMAIL:string = process.env.REACT_APP_G_USR!;\r\n    const CLIENTKEY:string = process.env.REACT_APP_G_KEY!;\r\n    \r\n    const doc = new GoogleSpreadsheet( SPREADSHEET_ID );\r\n\r\n    if( data.Name.length <= 0 || data.Email.length <= 0 ){\r\n      return false;\r\n    }\r\n\r\n    const appendSpreadsheet = async (row:any) => {\r\n        try {\r\n          await doc.useServiceAccountAuth({\r\n            client_email: CLIENTEMAIL,\r\n            private_key: CLIENTKEY.replace(/\\\\n/g, '\\n'),\r\n          });\r\n          await doc.loadInfo();\r\n      \r\n          const sheet = doc.sheetsById[ SHEET_ID ];\r\n          await sheet.addRow(data);\r\n          return true;\r\n        } catch (e) {\r\n          console.error('Error: ', e);\r\n          return false;\r\n        }\r\n    };\r\n    \r\n    if( appendSpreadsheet(data) ){\r\n        return true;    \r\n    };\r\n    return false;\r\n}\r\n\r\nexport default GoogleSheets;","import React from 'react';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\ninterface TextSent {\r\n    tooltip: string,\r\n    text: string,\r\n}\r\n\r\nfunction Info( props:TextSent ) {\r\n  \r\n  if( ! props.text ){\r\n    return null;\r\n  }\r\n  return (\r\n    <>\r\n        <label data-tip data-for='registerTip' className=\"font-mono my-6\"\r\n        >\r\n            { props.text }\r\n        </label>\r\n        <ReactTooltip id=\"registerTip\" place=\"top\" effect=\"solid\">\r\n        { props.tooltip }\r\n        </ReactTooltip>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Info;","import React from 'react';\nimport Heading from '../Text/Heading';\n\nfunction Thanks( props:any ) {\n    \n    const text = ({\n        thanks: \"Thanks, \" + props.name + \"!!\",\n    });\n    \n    return (\n        <div>\n            <Heading text={text.thanks} />\n        </div>\n    );\n    \n}\n\nexport default Thanks;","import React, { useState } from 'react';\nimport GoogleSheets from '../../Controllers/Forms/GoogleSheets';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport Info from '../Help/Info';\nimport Thanks from './Thanks';\n\nfunction Submit( props:any ) {\n    if( props.name && props.email ){\n        return (\n            <button \n                type=\"submit\" \n                className=\"my-3 transform bg-indigo-600 hover:bg-indigo-300 rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\" \n                aria-expanded=\"false\"\n                data-testid=\"submit-button\"\n\n                >\n                Submit\n            </button>\n        )\n    }\n    return null;\n}\n\nconst text = {\n    text: 'Keep me updated',\n    tooltip: 'We will use this information to keep you updated when important information has been added to this site!'\n}\n\ninterface KeepMeUpdatedInterface {\n    name: string,\n    email: string,\n    form: boolean,\n}\n\nfunction outPutRecaptcha(value:any) {\n    console.log(\"Captcha value:\", value);\n}\n\nfunction KeepMeUpdated() {\n\n    const SPREADSHEET_ID:string = process.env.REACT_APP_SPREADSHEET_ID!;\n    const SHEET_ID:string = process.env.REACT_APP_SHEET_ID!;\n    const RECAPTCHAKEY:string = process.env.REACT_APP_RECAPTCHAKEY!;\n    \n    const [user, setUser] = useState<KeepMeUpdatedInterface>({\n        name: '',\n        email: '',\n        form: false,\n    });\n\n    const user_data = {\n        Name: user.name,\n        Email: user.email,\n\n    };\n      \n    const handlePostForm = ( event:any ) => {\n        event.preventDefault();\n\n        if( GoogleSheets(user_data, SPREADSHEET_ID, SHEET_ID ) ){\n            setUser({...user, form: true});\n        };\n    }\n\n    const setTheEmail = ( event:any ) => {\n        var set_email:string = event.target.value;\n        setUser({...user, email: set_email});\n    }\n\n    const setTheName = ( event:any ) => {\n        setUser({...user, name: event.target.value});\n    }\n\n    if( ! user.form ){\n        return (\n            <form onSubmit={ handlePostForm } className=\"m-auto max-w-md my-10\">\n                \n                <Info text={ text.text } tooltip={ text.tooltip }/>\n    \n                <input \n                type=\"text\" \n                className=\"mb-3 p-3 block w-full rounded-md bg-gray-100 border-transparent focus:border-gray-500 focus:bg-white focus:ring-0\"\n                placeholder=\"Arya Stark\"\n                onChange={ setTheName }\n                ></input>\n    \n                <input \n                type=\"email\" \n                className=\"p-3 block w-full rounded-md bg-gray-100 border-transparent focus:border-gray-500 focus:bg-white focus:ring-0\"\n                placeholder=\"arya_stark@winterfell.gov\"\n                onChange={ setTheEmail }\n                ></input>\n\n                <ReCAPTCHA\n                    sitekey={ RECAPTCHAKEY }\n                    size=\"invisible\"\n                    onChange={ outPutRecaptcha }\n                />\n    \n                <Submit name={user.name} email={user.email} />\n\n            </form>\n        );\n    } else {\n        let username : string = user.name;\n        return (\n            <>\n                <Thanks name={username} />\n            </>\n        )\n    }   \n}\n\nexport default KeepMeUpdated;","export default __webpack_public_path__ + \"static/media/wedding-top.d36994dd.png\";","import React from 'react';\r\nimport Heading from '../Components/Text/Heading';\r\nimport HeaderImage from '../Components/Media/HeaderImage';\r\nimport TextBlock from '../Components/Text/TextBlock';\r\nimport KeepMeUpdated from '../Components/Forms/KeepMeUpdated';\r\nimport Image from '../Images/wedding-top.png';\r\n\r\nconst text = ({\r\n  intro: \"Alex & Lydia are Getting Married!\",\r\n  subtitle: \"MORE INFORMATION COMING SOON...\"\r\n});\r\n\r\nconst headingImage = ({\r\n  src: Image,\r\n  alt: \"Illustration of a boquet of flowers\"\r\n});\r\n\r\nfunction Holder() {\r\n\r\n  return (\r\n    <div className=\"App container mx-auto\">\r\n      <HeaderImage src={ headingImage.src } alt={ headingImage.alt }/>\r\n      <div className=\"Intro\">\r\n        <Heading text={text.intro}/>\r\n        <TextBlock text={text.subtitle}/>\r\n        <KeepMeUpdated/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Holder;\r\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport Holder from './Pages/Holder';\n\nfunction App() {\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/directions\">\n          \n        </Route>\n        <Route path=\"/rsvp\">\n          \n        </Route>\n        <Route path=\"/\">\n          <Holder/>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}